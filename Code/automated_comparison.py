'''
This script allows for the comparison a flare in the STIX flare list with the magnetically connected points
computed by the magnetic connectivity tool (url: http://connect-tool.irap.omp.eu/)

It determines if the flares origin is within delta (to be chosen by the user) degrees of a magnetically
connected point on the sun's surface.

TODO: take into account start and end time of the flare, not just peak (which is the current state)

TODO: improve metric to classify possible connection points and account for their likelyhood

TODO: check correctness of calculations and formulation of output

If time allows:
TODO: take into account shape of AR when looking for a connection with the tool

!!! For new users it will be necessary to change some file paths and make new directories to allow the automation of downloads to work !!!
!!! This script will open browser tabs to download the magnetic connectivity tool data automatically. Google Chrome is recommended     !!!
'''

import pandas as pd
import numpy as np
import datetime

import stix_handler
import connectivity_tool
import plots
import epd_handler
import misc_handler

# --------------------------------- Input parameters ---------------------------------

# choose if additional output is requested
opt_output = False
# choose if plots for non-connected flares should be made
plot_non_connected = True
# show all events
show_all = False

# work with data and search for events within the following timespan
start_date = "2022-01-14"
end_date = "2022-01-14"

# --------------------------------------- STIX ---------------------------------------

delta = 10      # radius of connection points that get accepted (degrees)

# read STIX flare list and extract coordinates of the origin
stix_flares = stix_handler.read_list()

# get range of flares that are within the defined timeframe
flare_start_id, flare_end_id = stix_handler.flares_range(start_date, end_date, stix_flares['peak_UTC'])
all_flares = range(flare_start_id, flare_end_id + 1)

# connected_flares, flare_distances = connectivity_tool.find_connected_flares(stix_flares, flare_start_id, flare_end_id, delta, opt_output, plot_non_connected)

connected_flares = [25, 26, 27, 28, 29, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 81, 82, 96, 125, 159, 187, 195, 196, 236, 243, 244, 245, 246, 248, 249, 251, 254, 255, 257, 258, 259, 261, 289, 290, 291, 292, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 340, 341, 358, 359, 369, 455, 456, 457, 458, 459, 502, 543, 544, 547, 548, 549, 550, 551, 553, 560, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 605, 606, 608, 609, 620, 621, 622, 625, 627, 629, 630, 632, 648, 649, 657, 737, 738, 739, 740, 742, 743, 744, 745, 746, 747, 749, 750, 751, 754, 756, 757, 759, 760, 762, 767, 789, 790, 792, 803, 804, 
805, 806, 809, 810, 812, 813, 814, 816, 817, 827, 830, 831, 834, 835, 843, 852, 853, 854, 855, 937, 946, 948, 972, 1071, 1183, 1189, 1316, 1366, 1422, 1428, 1430, 1433, 1434, 1438, 1441, 1445, 1446, 1447, 1448, 1450, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1464, 1465, 1468, 1469, 1470, 1471, 1472, 1477, 1478, 1479, 1481, 1482, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1507, 1508, 1511, 1513, 1514, 1517, 1519, 1521, 1525, 1527, 1532, 1535, 1536, 1537, 1538, 1539, 1541, 1543, 1545, 1546, 1547, 1550, 1551, 1552, 1553, 1554, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1570, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1582, 1585, 1586, 1587, 1592, 1595, 1598, 1599, 1600, 1601, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1642, 1649, 1650, 1721, 1762, 1766, 1769, 1774, 1777, 1787, 1845, 1850, 1853, 1865, 1867, 1868, 1869, 1871, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1885, 1886, 1888, 
1889, 1896, 1900, 1903, 1907, 1915, 2086, 2092, 2102, 2103, 2104, 2120, 2121, 2123, 2130, 2134, 2147, 2148, 2156, 2158, 2164, 2169, 2177, 2187, 2188, 2189, 2204, 2205, 2206, 2207, 2220, 2224, 2226, 2227, 2229, 2233, 2235, 2238, 2241, 2243, 2247, 2321, 2324, 2339, 2372, 2430, 2432, 2433, 2437, 2460, 2464, 2476, 2478, 2525, 2532, 2533, 2534, 2535, 2541, 2543, 2555, 2556, 2557, 2588, 2589, 2591, 2603, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2630, 2631, 2632, 2634, 2635, 2636, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2649, 2650, 2651, 2653, 2654, 2655, 2656, 2661, 2662, 2663, 2666, 2667, 2670, 2672, 2675, 2684, 2691, 2692, 2776, 2777, 2778, 2779, 2783, 2785, 2786, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2805, 2837, 2838, 2839, 2915, 2919, 2937, 2941, 2950, 2953, 2965, 2970, 2979, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3222, 3223, 3224, 3225, 3226, 3227, 3229, 3230, 3232, 3235, 3236, 3237, 3238, 3240, 3242, 3244, 3248, 3249, 3250, 3259, 3281, 3282, 3290, 3303, 3305, 3317, 3318, 3319, 3405, 3419, 3423, 3469, 3470, 3476, 3478, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3493, 3494, 3501, 3502, 3506, 3511, 3522, 3526, 3531, 3532, 3533, 3536, 3539, 3546, 3549, 3550, 3551, 
3554, 3557, 3562, 3563, 3566, 3567, 3570, 3571, 3575, 3576, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3589, 3590, 3593, 3596, 3598, 3601, 3602, 3607, 3612, 3613, 3614, 3619, 3620, 3622, 3623, 3625, 3626, 3627, 3628, 3630, 3631, 3633, 3634, 3635, 3636, 3638, 3642, 3643, 3650, 3663, 3664, 3665, 3666, 3667, 3674, 3676, 3679, 3680, 3689, 3693, 3696, 3697, 3698, 3705, 3714, 3716, 3717, 3719, 3721, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 3756, 3759, 3762, 3763, 3769, 3777, 3782, 3788, 3793, 3799, 3804, 3805, 3811, 3812, 3814, 3815, 3816, 3817, 3819, 3829, 3830, 3831, 3832, 3833, 3834, 3836, 3840, 3841, 3845, 3848, 3854, 3858, 3859, 3861, 3862, 3865, 3870, 3877, 3880, 3881, 3882, 3883, 3885, 3887, 3900, 3901, 3903, 3917, 3936, 3938, 3960, 3967, 3974, 3977, 3978, 3981, 3983, 3988, 4002, 4003, 4012, 4016, 4018, 4020, 4022, 4023, 4024, 4027, 4028, 4029, 4030, 4031, 4035, 4039, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4050, 4052, 4053, 4055, 4057, 4058, 4059, 4060, 4061, 4062, 4064, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 4082, 4084, 4085, 4087, 4088, 4089, 4090, 4091, 4092, 4094, 4095, 4101, 4319, 4324, 4325, 4328, 4330, 4332, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4349, 4350, 4353, 4354, 4355, 4356, 4357, 4358, 
4359, 4361, 4362, 4363, 4364, 4367, 4368, 4385, 4386, 4391, 4455, 4463, 4476, 4477, 4482, 4483, 4494, 4499, 4500, 4502, 4504, 4507, 4602, 4603, 4607, 4608, 4609, 4611, 4665, 4667, 4668, 4669, 4671, 4672, 4684, 4685, 4686, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4759, 4760, 4761, 4762, 4763, 4765, 4766, 4768, 4770, 4771, 4773, 4776, 4777, 4778, 4815, 4820, 4824, 4848, 4879, 4881, 4884, 4890, 4891, 4892, 4893, 4894, 4898, 4918, 4929, 4931, 4932, 4933, 4935, 4936, 4944, 4945, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 4958, 4959, 4960, 4961, 4962, 4963, 4964, 4966, 4967, 4968, 4969, 4970, 4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 4982, 4983, 4985, 4986, 4987, 4989, 4996, 5013, 5014, 5015, 5016, 5017, 5018, 5019, 5020, 5021, 5022, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5062, 5066, 5071, 5076, 5077, 5091, 5094, 5107, 5109, 5113, 5118, 5138, 5140, 5145, 5146, 5147, 5151, 5153, 5154, 5156, 5157, 5158, 5159, 5162, 5164, 5165, 5167, 5168, 5171, 5172, 5180, 5181, 5232, 5242, 5277, 5310, 5332, 5335, 5336, 5459, 5475, 5482, 5483, 5487, 5504, 5543, 5546, 5548, 5550, 5553, 5554, 5555, 5568, 5570, 5571, 5572, 5575, 5576, 5578, 5579, 5592, 5597, 5598, 5599, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5609, 5610, 5611, 5613, 5614, 5615, 5616, 5618, 5619, 5626, 5628, 5630, 5631, 5635, 
5637, 5640, 5642, 5649, 5650, 5651, 5654, 5658, 5661, 5662, 5666, 5669, 5678, 5681, 5682, 5685, 5688, 5690, 5693, 5695, 5696, 5697, 5698, 5701, 5702, 5704, 5708, 5709, 5711, 5718, 5723, 5732, 5733, 5735, 5736, 5738, 5739, 5740, 5741, 5742, 5743, 5744, 5745, 5746, 5772, 5773, 5778, 5816, 5818, 5822, 5823, 5825, 5831, 5867, 5871, 5872, 5874, 5878, 5880, 5881, 5882, 5884, 5934, 5935, 5936, 5937, 5938, 6006, 6008, 6073, 6103, 6107, 6121, 6130, 6144, 6145, 6178, 6186, 6188, 6190, 6191, 6192, 6193, 6194, 6199, 6201, 6205, 6207, 6208, 6211, 6212, 6214, 6216, 6217, 6218, 6221, 6225, 6228, 6231, 6245, 6261, 6264, 6268, 6270, 6271, 6273, 6274, 6276, 6277, 6278, 6281, 6282, 6284, 6285, 6289, 6292, 6296, 6300, 6303, 6304, 6305, 6306, 6312, 6401, 6404, 6519, 6561, 6562, 6565, 6568, 6586, 6593, 6595, 6603, 6613, 6614, 6618, 6624, 6625, 6627, 6631, 6632, 6682, 6689, 6692, 6694, 6696, 6706, 6709, 6712, 6721, 6722, 6724, 6754, 6758, 6764, 6767, 6773, 6784, 6788, 6789, 6791, 6792, 6795, 6796, 6797, 6801, 6802, 6803, 6806, 6808, 6809, 6811, 6812, 6813, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6828, 6841, 6858, 6895, 6905, 6914, 6966, 7163, 7167, 7175, 7176, 7177, 7181, 7182, 7219, 7241, 7244, 7245, 7254, 7255, 7257, 7259, 7260, 7261, 7266, 7277, 7278, 7281, 7377, 7388, 7423, 7430, 7431, 7438, 7444, 7445, 7446, 7447, 
7448, 7449, 7450, 7451, 7452, 7454, 7456, 7457, 7458, 7459, 7461, 7462, 7463, 7465, 7467, 7468, 7469, 7470, 7471, 7472, 7475, 7476, 7477, 7478, 7481, 7482, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7549, 7553, 7554, 7555, 7556, 7562, 7563, 7564, 7567, 7568, 7569, 7570, 7571, 7572, 7574, 7575, 7578, 7579, 7580, 7581, 7582, 7583, 7585, 7586, 7593, 7594, 7598, 7599, 7603, 7604, 7606, 7607, 7610, 7611, 7613, 7616, 7620, 7622, 7623, 7624, 7626, 7629, 7632, 7638, 7643, 7648, 7653, 7663, 7665, 7673, 7674, 7680, 7681, 7684, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7696, 7702, 7704, 7706, 7707, 7712, 7713, 7715, 7724, 7728, 7735, 7737, 7740, 7742, 7746, 7780, 7782, 7783, 7792, 7795, 7820, 7830, 7898, 7915, 7921, 7933, 7934, 7948, 8011, 8013, 8015, 8017, 8018, 8019, 8020, 8023, 8025, 8026, 8027, 8028, 8030, 8032, 8035, 8037, 8038, 8040, 8042, 8044, 8045, 8046, 8047, 8053, 8054, 8055, 8056, 8059, 8128, 8159, 8160, 8163, 8164, 8167, 8171, 8172, 8173, 8174, 8175, 8177, 8178, 8179, 8183, 8184, 8240, 
8241, 8256, 8263, 8264, 8265, 8276, 8292, 8300, 8352, 8393, 8394, 8395, 8557, 8573, 8575, 8577, 8578, 8579, 8580, 8581, 8582, 8584, 8585, 8587, 8588, 8590, 8591, 8592, 8594, 8597, 8598, 8599, 8600, 8601, 8602, 8603, 8604, 8605, 8606, 8610, 8616, 8617, 8620, 8623, 8624, 8625, 8626, 8627, 8628, 8630, 8631, 8632, 8634, 8636, 8639, 8640, 8641, 8642, 8643, 8644, 8646, 8647, 8648, 8650, 8651, 8656, 8657, 8659, 8663, 8664, 8665, 8672, 8673, 8677, 8678, 8679, 8688, 8689, 8692, 8695, 8696, 8698, 8699, 8700, 8701, 8702, 8704, 8705, 8706, 8707, 8708, 8709, 8711, 8712, 8713, 8715, 8718, 8720, 8721, 8722, 8723, 8726, 8727, 8731, 8734, 8752, 8817, 8822, 8823, 8824, 8825, 8838, 8839, 8842, 8843, 8845, 8849, 8850, 8851, 8853, 8855, 8856, 8862, 8864, 8865, 8866, 8867, 8868, 8874, 8879, 8882, 8884, 8885, 8886, 8887, 8888, 8889, 8890, 8891, 8892, 8893, 8894, 8898, 8900, 8902, 8904, 8906, 8908, 8941, 8978, 8979, 8980, 8982, 8985, 8986, 8988, 8995, 8999, 9006, 9012, 9022, 9034, 9038, 9039, 9043, 9046, 9063, 9067, 9068, 9069, 9071, 9072, 9073, 9075, 9076, 9077, 9078, 9080, 9083, 9087, 9089, 9092, 9093, 9094, 9099, 9100, 9101, 9103, 9105, 9111, 9112, 9113, 9119, 9122, 9123, 9124, 9227, 9237, 9265, 9269, 9271, 9272, 9276, 9277, 9279, 9282, 9283, 9284, 9285, 9286, 9290, 9291, 9292, 9294, 9296, 9298, 9300, 9303, 9305, 9306, 9320, 
9322, 9451, 9548, 9560, 9561, 9569, 9570, 9571, 9573, 9574, 9584, 9585, 9592, 9593, 9603, 9606, 9631, 9642, 9645, 9646, 9650, 9651, 9652, 9654, 9655, 9656, 9657, 9659, 9661, 9662, 9663, 9664, 9666, 9667, 9668, 9669, 9670, 9672, 9673, 9674, 9677, 9678, 9681, 9683, 9692, 9710, 9712, 9713, 9795, 9796, 9798, 9799, 9800, 9801, 9812, 9830, 9892, 9893, 9894, 9895, 9896, 9897, 9916, 9917, 9918, 9919, 9920, 9922, 9954, 9955, 9956, 9957, 9959, 9960, 9961, 9962, 9963, 9964, 9965, 9966, 9968, 9970, 9971, 9973, 9978, 9979, 9980, 9981, 9982, 9983, 9984, 9985, 9986, 9987, 9989, 9990, 9991, 9992, 9993, 9995, 10086, 10106, 10107, 10127, 10128, 10129, 10130, 10132, 10133, 
10134, 10135, 10136, 10137, 10138, 10139, 10143, 10144, 10146, 10147, 10148, 10149, 10150, 10151, 10155, 10158, 10159, 10161, 10163, 10164, 10165, 10168, 10169, 10170, 10175, 10197, 10200, 10205, 10207, 10499, 10545, 10551, 10565, 10571, 10572, 10573, 10577, 10579, 10581, 10587, 10595, 10603, 10605, 10607, 10608, 10617, 10651, 10655, 10682, 10686, 10687, 10703, 10704, 10705, 10706, 10747, 10776, 10812, 10820, 10842, 10895, 10911, 10920, 10922, 10942, 10943, 10946, 10947, 10968, 10970, 10971, 10972, 10974, 10975, 10976, 10981, 10982, 10983, 10984, 10985, 10986, 10987, 10988, 10990, 10991, 10993, 10994, 10997, 10998, 11024, 11228, 11231, 11236, 11237, 11249, 11259, 11260, 11262, 11268, 11276, 11277, 11285, 11286, 11288, 11289, 11302, 11312, 11314, 11315, 11316, 11317, 11319, 11320, 11321, 11322, 11323, 11324, 11326, 11327, 11397, 11400, 11402, 11403, 11406, 11407, 11408, 11410, 11412, 11413, 11414, 11415, 11416, 11417, 11418, 11419, 11421, 11423, 11426, 11427, 11428, 11430, 11431, 11432, 11433, 11434, 11435, 11436, 11437, 11438, 11439, 11440, 11442, 11443, 11444, 11445, 11456, 11458, 11460, 11461, 11462, 11463, 11468, 11469, 11470, 11471, 11472, 11473, 11474, 11475, 11476, 11477, 11478, 11479, 11481, 11482, 11483, 11484, 11485, 11486, 11487, 11488, 11489, 11490, 11491, 11492, 11493, 11505, 11506, 11507, 11508, 11509, 11510, 11511, 11512, 11513, 11514, 11515, 11516, 11517, 11518, 11519, 11520, 11521, 11525, 11532, 11533, 11534, 11535, 11540, 11541, 11542, 11543, 11544, 11546, 11547, 11548, 11549, 11550, 11551, 11552, 11553, 
11554, 11555, 11556, 11557, 11558, 11559, 11560, 11562, 11563, 11565, 11566, 11567, 11568, 11569, 11570, 11572, 11573, 11583, 11595, 11596, 11597, 11598, 11599, 11600, 11607, 11632, 11644, 11647, 11667, 11753, 11765, 11771, 11773, 11774, 11775, 11776, 11780, 11781, 11782, 11783, 11784, 11785, 11788, 11789, 11790, 11791, 11792, 11793, 11795, 11797, 11798, 11799, 11800, 11801, 11802, 11815, 11826, 11833, 11840, 11843, 11848, 11851, 11852, 11854, 11855, 11857, 11859, 11860, 11861, 11863, 11864, 11866, 11867, 11868, 11870, 11871, 11873, 11874, 11876, 11877, 11882, 11883, 11884, 11889, 11890, 11896, 11897, 11898, 11901, 11902, 11903, 11906, 11907, 11909, 11911, 11914, 11916, 11944, 11945, 11946, 11947, 11948, 11949, 11958, 11959, 11960, 11961, 11962, 11963, 11965, 11966, 11967, 11968, 11969, 11970, 11971, 11973, 11976, 11977, 11980, 11985, 11986, 11987, 11988, 11989, 11990, 11991, 11992, 11993, 11994, 11995, 11996, 11997, 11998, 11999, 12000, 12001, 12002, 12003, 12004, 12005, 12006, 12007, 12008, 12009, 12010, 12011, 12012, 12013, 12014, 12015, 12016, 12017, 12018, 12019, 12032, 12033, 12034, 12035, 12036, 12037, 12038, 12039, 12040, 12041, 12046, 12050, 12051, 12052, 12053, 12240, 12275, 12276, 12403, 12404, 12406, 12407, 12431, 12434, 12447, 12448, 12456, 12457, 12458, 12459, 12463, 12464, 12465, 12466, 12470, 12471, 12472, 12473, 12474, 12490, 12493, 12496, 12497, 12508, 12515, 12516, 12517, 12518, 12519, 12520, 12570, 12573, 12586, 12719, 12722, 12723, 12724, 12727, 12728, 12729, 12734, 12736, 12739, 12743, 12745, 12746, 
12747, 12749, 12753, 12754, 12755, 12757, 12758, 12766, 12846, 12858, 12859, 12860, 12875, 12877, 12906, 12909, 13092, 13214, 13223, 13238, 13239, 13247, 13249, 13251, 13253, 13254, 13256, 13260, 13261, 13262, 13266, 13275, 13282, 13285, 13288, 13289, 13302, 13306, 13308, 13310, 13315, 13317, 13318, 13319, 13320, 13321, 13324, 13327, 13340, 13345, 13346, 13350, 13351, 13354, 13357, 13358, 13359, 13362, 13366, 13367, 13369, 13370, 13371, 13372, 13374, 13375, 13376, 13377, 13380, 13384, 13386, 13387, 13388, 13389, 13392, 13395, 13397, 13398, 13399, 13400, 13401, 13402, 13403, 13404, 13405, 13406, 13408, 13413, 13415, 13416, 13420, 13424, 13425, 13427, 13428, 13429, 13431, 13432, 13436, 13442, 13443, 13444, 13445, 13446, 13447, 13448, 13449, 13450, 13451, 13452, 13455, 13458, 13459, 13460, 13462, 13463, 13464, 13465, 13467, 13481, 13482, 13489, 13492, 13493, 13495, 13504, 13506, 13508, 13511, 13512, 13513, 13514, 13518, 13521, 13523, 13525, 13526, 13528, 13533, 13536, 13537, 13542, 13551, 13555, 13556, 13559, 13564, 13566, 13568, 13569, 13572, 13576, 13578, 13586, 13587, 13590, 13591, 13592, 13594, 13600, 13601, 13602, 13603, 13609, 13614, 13616, 13617, 13619, 13631, 13632, 13635, 13636, 13637, 13638, 13639, 13640, 13641, 13642, 13643, 13644, 13645, 13646, 13649, 13652, 13653, 13654, 13655, 13656, 13659, 13660, 13670, 13678, 13686, 13687, 13688, 13690, 13691, 13694, 13695, 13696, 13697, 13699, 13700, 13702, 13704, 13705, 13706, 13707, 13709, 13717, 13740, 13747, 13749, 13750, 13751, 13752, 13756, 13758, 13759, 13760, 13761, 
13763, 13764, 13766, 13767, 13768, 13769, 13771, 13772, 13775, 13776, 13777, 13781, 13783, 13784, 13786, 13791, 13792, 13794, 13796, 13799, 13800, 13801, 13803, 13804, 13805, 13806, 13808, 13810, 13814, 13817, 13819, 13821, 13823, 13824, 13827, 13828, 13829, 13830, 13832, 13833, 13834, 13835, 13837, 13839, 13840, 13841, 13843, 13844, 13847, 13848, 13849, 13850, 13852, 13853, 13854, 13855, 13860, 13861, 13862, 13863, 13864, 13865, 13866, 13867, 13869, 13870, 13875, 13877, 13883, 13885, 13886, 13889, 13890, 13894, 13895, 13896, 13897, 13898, 13899, 13901, 13902, 13904, 13905, 13907, 13936, 13942, 13955, 13956, 13958, 13960, 13961, 13963, 13964, 13965, 13966, 13967, 14008, 14086, 14308, 14473, 14489, 14533, 14535, 14567, 14612, 14614, 14621, 14626, 14634, 14669, 14691, 14692, 14704, 14707, 14709, 14712, 14713, 14714, 14715, 14716, 14717, 14718, 14722, 14727, 14728, 14732, 14735, 14739, 14781, 14789, 14792, 14810, 14811, 14812, 14821, 14831, 14832, 14839, 14841, 14844, 14855, 14856, 14858, 14859, 14869, 14870, 14876, 14880, 14881, 14889, 14890, 14893, 14894, 14895, 14896, 14904, 14912, 14942, 14943, 14962, 14964, 14970, 14975, 14977, 14981, 14982, 14983, 14989, 14999, 15000, 15001, 15010, 15022, 15023, 15027, 15030, 15032, 15033, 15044, 15107, 15118, 15119, 15120, 15126, 15180, 15181, 15186, 15210, 15214, 15245, 15342, 15348, 15514, 15524, 15536, 15558, 15568, 15569, 15571, 15574, 15577, 15588, 15599, 15605, 15607, 15609, 15625, 15626, 15650, 15679, 15699, 15708, 15717, 15749, 15754, 15755, 15758, 15762, 15764, 15765, 15766, 
15767, 15825, 15835, 15845, 15848, 15849, 15856, 15857, 15858, 15859, 15860, 15861, 15862, 15867, 15868, 15869, 15870, 15871, 15873, 15875, 15876, 15877, 15878, 15879, 15880, 15881, 15882, 15883, 15884, 15885, 15886, 15887, 15888, 15889, 15891, 15892, 15893, 15896, 15902, 15903, 15904, 15905, 15906, 15907, 15909, 15911, 15912, 15914, 15915, 15916, 15918, 15921, 15922, 15925, 15926, 15937, 15938, 15939, 15948, 15949, 15950, 15957, 15958, 15959, 15960, 15962, 15963, 15964, 15967, 15970, 15974, 15975, 15977, 15978, 15980, 15982, 15995, 16001, 16005, 16006, 16010, 16016, 16017, 16018, 16019, 16020, 16023, 16024, 16036, 16040, 16041, 16042, 16043, 16045, 16050, 16051, 16053, 16054, 16057, 16139, 16140]

if (show_all):
    connected_flares = all_flares

# print("Connected flares in magentic connectivity tool: ", connected_flares)
# print(len(connected_flares))
# get timestamps of connected flares
connected_flares_peak_utc = []
for i in connected_flares:
    connected_flares_peak_utc.append(stix_flares['peak_UTC'][i])

# --------------------------------------- EPD ---------------------------------------

sensor = 'ept' # ['het', 'ept', 'step']
viewing = 'south' # ['sun', 'asun', 'north', 'south', 'omni']

# load data from compressed EPD dataset
# epd_handler.load_pickles() loads dataframe of timespan defined (including end_date)
# df_ion = epd_handler.load_pickles(sensor, viewing, start_date, end_date, 'ion')
df_electron = epd_handler.load_pickles(sensor, start_date, end_date, 'electron', viewing)

print("Pickle files loaded...")

# compute running averade and standard deviation
# ion_running_mean, ion_running_std = epd_handler.running_average(df_ion)
electron_running_mean, electron_running_std = epd_handler.running_average(df_electron)

print("Running averages computed...")

# try to find events in data
sigma_factor = 2.5
events_electrons = epd_handler.find_event(df_electron, electron_running_mean, electron_running_std, sigma_factor)
# events_ions = epd_handler.find_event(df_ion, ion_running_mean, ion_running_std, sigma_factor)

print("Events found...")

if(opt_output):
    print(events_electrons)
    # print(events_ions)

epd_connected_flares_electron_peak_utc = []
# epd_connected_flares_ion_peak_utc = []

if flare_end_id != -1:
    # find flares that peak during epd event
    delayed_utc_electrons = []
    delayed_utc_electrons_start = []
    # delayed_utc_ions = []
    indirect_factor = 1.5
    for i in range(flare_start_id, flare_end_id + 1):
        utc = stix_flares['peak_UTC'][i]
        timestamp = pd.Timestamp(utc[0:10] + " " + utc[11:19])
        
        delayed_utc_electrons.append(misc_handler.add_delay('electron', i, timestamp, indirect_factor, stix_flares['solo_position_AU_distance'][i]))
        # delayed_utc_ions.append(misc_handler.add_delay('ion', i, timestamp, indirect_factor))
        
        utc_start = stix_flares['start_UTC'][i]
        timestamp = pd.Timestamp(utc_start[0:10] + " " + utc_start[11:19])
        
        delayed_utc_electrons_start.append(misc_handler.add_delay('electron', i, timestamp, indirect_factor, stix_flares['solo_position_AU_distance'][i]))
        
    for i in range(len(delayed_utc_electrons)):
        for j in range(34):
            delayed_utc_electrons[i][j][0] = delayed_utc_electrons_start[i][j][0]
        
    epd_connected_flares_electrons = []
    # epd_flare_distances_electrons = []
    count = 0
    for i in delayed_utc_electrons:
        temp = False
        for bin in range(34):
            for j in events_electrons:
                if i[bin][0] < j[0] and j[0] < i[bin][1]:
                    epd_connected_flares_electrons.append(flare_start_id + count)
                    # epd_flare_distances_electrons.append(flare_distances[count])
                    temp = True
                    break
            if temp:
                break
        count += 1
    '''
    epd_connected_flares_ions = []
    epd_flare_distances_ions = []
    count = 0
    for i in delayed_utc_ions:
        temp = False
        for bin in range(64):
            for j in events_ions:
                if (j[0] < i[bin][0] and j[1] > i[bin][0]) or (j[0] < i[bin][1] and j[1] > i[bin][1]):
                    epd_connected_flares_ions.append(flare_start_id + count)
                    epd_flare_distances_ions.append(flare_distances[count])
                    temp = True
                    break
            if temp:
                break
        count += 1
    '''
    # plots.histogram(epd_flare_distances_electrons, range(0, 180, 5), "Images/Hist/epd_flares_distance_electrons.jpg", 'Distance to closest passible connection point [degrees]')
    # plots.histogram(epd_flare_distances_ions, range(0, 180, 5), "Images/Hist/epd_flares_distance_ions.jpg", 'Distance to closest passible connection point [degrees]')
        
    print("Connected flares in EPD (electrons): ", epd_connected_flares_electrons)
    print(len(epd_connected_flares_electrons))
    '''
    all_epd_flares = [26, 27, 44, 57, 59, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 119, 120, 121, 126, 127, 128, 129, 131, 198, 204, 205, 207, 216, 219, 220, 225, 304, 320, 328, 332, 334, 363, 364, 416, 430, 433, 437, 441, 446, 459, 461, 462, 467, 473, 545, 571, 602, 606, 628, 635, 636, 645, 648, 649, 652, 653, 717, 719, 720, 721, 728, 729, 731, 736, 737, 738, 739, 740, 745, 755, 760, 761, 764, 765, 767, 785, 790, 791, 807, 815, 825, 838, 868, 869, 871, 905, 909, 910, 920, 924, 925, 926, 927, 943, 946, 949, 950, 951, 954, 955, 957, 958, 965, 979, 1001, 1002, 1005, 1028, 1031, 1183, 1184, 1276, 1277, 1282, 
1284, 1318, 1376, 1381, 1390, 1391, 1396, 1397, 1398, 1400, 1403, 1407, 1408, 1409, 1419, 1426, 1427, 1429, 1433, 1437, 1441, 1442, 1448, 1454, 1468, 1481, 1482, 1549, 1551, 1554, 1610, 1611, 1619, 1620, 1621, 1624, 1635, 1637, 1641, 1642, 1644, 1671, 1673, 1692, 1693, 1694, 1695, 1712, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1728, 1729, 1732, 1736, 1737, 1739, 1741, 1865, 1876, 1887, 1888, 1922, 1926, 1927, 1928, 1935, 1941, 1942, 1943, 1944, 1951, 1954, 1955, 1956, 1957, 1958, 1960, 1965, 1969, 1970, 1978, 1979, 1997, 1998, 1999, 2008, 2018, 2030, 2033, 2034, 2036, 2037, 2038, 2053, 2059, 2061, 2071, 2097, 2136, 2137, 2146, 2150, 2151, 2156, 2157, 2169, 2170, 2183, 2198, 2205, 2208, 2209, 2245, 2254, 2281, 2295, 2296, 2297, 2299, 2300, 2302, 2307, 2332, 2337, 2341, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2353, 2354, 2355, 2356, 2358, 2361, 2362, 2363, 2364, 2367, 2372, 2381, 2400, 2486, 2497, 2498, 2619, 2649, 2650, 2662, 2664, 2665, 2666, 2667, 2668, 2707, 2708, 2711, 2716, 2717, 2728, 2729, 2730, 2748, 2749, 2750, 2751, 2756, 2757, 2758, 2759, 2761, 2762, 2765, 2766, 2769, 2771, 2772, 2773, 2775, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 
2786, 2787, 2788, 2789, 2790, 2791, 2793, 2806, 2807, 2808, 2809, 2811, 2813, 2815, 2817, 2818, 2819, 2833, 2834, 2845, 2848, 2849, 2858, 2859, 2868, 2879, 2890, 2898, 2902, 2910, 2911, 2932, 2933, 2935, 2954, 2955, 2956, 2959, 2960, 2962, 2963, 2965, 2966, 2969, 2971, 2972, 2978, 2982, 2984, 3019, 3024, 3025, 3031, 3032, 3033, 3371, 3434, 3509, 3541, 3555, 3578, 3628, 3630, 3631, 3632, 3633, 3635, 3696, 3772, 3775, 3779, 3858, 3863, 3899, 3902, 3910, 4021, 4025, 4026, 4031, 4033, 4037, 4038, 4041, 4044, 4045, 4048, 4050, 4051, 4057, 4058, 4059, 4074, 4091, 4187, 4241, 4248, 4318, 4322, 4332, 4333, 4444, 4450, 4451, 4457, 4458, 4460, 4467, 4468, 4477, 4520, 4524, 4527, 4532, 4533, 4539, 4542, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4560, 4642, 4701, 4710, 4751, 4754, 4755, 4756, 4757, 4758, 4759, 4761, 4762, 4764, 4765, 4766, 4767, 4768, 4769, 4770, 4772, 4774, 4785, 4786, 4787, 4790, 4805, 4890, 4894, 4895, 4908, 4909, 4911, 4912, 4913, 4925, 4971, 4972, 4984, 4986, 4988, 4994, 4995, 4996, 5005, 5010, 5012, 5013, 5015, 5031, 5035, 5036, 5043, 5057, 5073, 5104, 5111, 5126, 5132, 5134, 5135, 5136, 5137, 5147, 5151, 5152, 5162, 5164, 5165, 5177, 5178, 5186, 
5189, 5190, 5193, 5203, 5204, 5210, 5211, 5215, 5228, 5229, 5267, 5281, 5282, 5283, 5284, 5287, 5288, 5289, 5290, 5291, 5294, 5300, 5371, 5373, 5376, 5377, 5378, 5390, 5405, 5406, 5408, 5409, 5410, 5412, 5413, 5415, 5416, 5418, 5419, 5430, 5431, 5437, 5438, 5442, 5446, 5486, 5491, 5493, 5496, 5510, 5511, 5528, 5536, 5547, 5548, 5585, 5587, 5590, 5600, 5601, 5641, 5663, 5664, 5701, 5712, 5714, 5741, 5777, 5792, 5803, 5805, 5807, 5823, 5827, 5828, 5831, 5834, 5835, 5840, 5841, 5844, 5846, 5888, 5897, 5901, 5908, 5946, 5960, 6015, 6064, 6075, 6141, 6164, 6256, 6265, 6275, 6276, 6277, 6278, 6320, 6426]
    
    epd_connected_flares_electrons = []
    
    for i in all_epd_flares:
        if flare_start_id <= i and flare_end_id >= i:
            epd_connected_flares_electrons.append(i)
    '''
    # print("Connected flares in EPD (ions): ", epd_connected_flares_ions)
    # print(len(epd_connected_flares_ions))

    # get timestamps of connected flares
    for i in epd_connected_flares_electrons:
        epd_connected_flares_electron_peak_utc.append(stix_flares['peak_UTC'][i])
        
    #for i in epd_connected_flares_ions:
    #    epd_connected_flares_ion_peak_utc.append(stix_flares['peak_UTC'][i])

# rename columns for output/figures
col_names_mean = []
col_names_std = []
for col in electron_running_mean.columns:
    col_names_mean.append("Mean" + col[8:])
    col_names_std.append("Mean+" + str(sigma_factor) + "Sigma" + col[8:])
    
electron_running_mean.columns = col_names_mean
electron_running_std.columns = col_names_std

plots.plot_epd_data(df_electron, electron_running_mean, electron_running_std, sigma_factor, 'Images/Electron.jpg', connected_flares_peak_utc,
                    epd_connected_flares_electron_peak_utc, events_electrons, stix_flares['peak_UTC'][flare_start_id:flare_end_id + 1])

print(len(events_electrons))

# Add count of events per interval
# Print total number of intervals (for statistics)

epd_connected_flares_electrons = [27, 44, 45, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 119, 120, 121, 122, 126, 127, 128, 129, 131, 195, 198, 204, 205, 206, 207, 215, 216, 219, 220, 225, 303, 304, 305, 320, 328,
        332, 334, 363, 364, 437, 441, 444, 446, 461, 462, 465, 473, 474, 628, 635, 636, 648, 649, 652, 653, 717, 719, 720, 721, 722, 723, 731, 732, 736, 737, 739, 740, 747, 755, 757, 760, 761, 764, 765, 766,
        780, 785, 807, 815, 835, 836, 838, 868, 869, 870, 872, 875, 909, 910, 920, 924, 925, 926, 927, 928, 943, 946, 949, 950, 951, 952, 953, 954, 957, 958, 959, 961, 964, 965, 979, 980, 1001, 1002, 1004,
        1005, 1028, 1031, 1084, 1179, 1180, 1183, 1284, 1310, 1311, 1312, 1318, 1381, 1389, 1391, 1396, 1397, 1398, 1400, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1412, 1413, 1416, 1419, 1427, 1429, 1433,
        1437, 1440, 1441, 1442, 1443, 1449, 1454, 1455, 1462, 1468, 1481, 1482, 1549, 1550, 1551, 1552, 1553, 1554, 1610, 1611, 1613, 1620, 1621, 1622, 1623, 1624, 1637, 1638, 1641, 1642, 1644, 1671, 1673,
        1692, 1693, 1694, 1695, 1717, 1718, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1876, 1887, 1888, 1889, 1922, 1923, 1926, 1927,
        1928, 1935, 1941, 1942, 1943, 1944, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1965, 1967, 1969, 1970, 1978, 1998, 2008, 2018, 2019, 2030, 2033, 2034, 2036, 2038, 2050, 2053, 2059,
        2061, 2063, 2071, 2136, 2137, 2146, 2150, 2151, 2156, 2157, 2169, 2170, 2173, 2198, 2205, 2208, 2209, 2220, 2254, 2279, 2295, 2296, 2297, 2299, 2300, 2302, 2304, 2332, 2333, 2337, 2338, 2345, 2346,
        2347, 2348, 2349, 2350, 2351, 2354, 2355, 2356, 2357, 2358, 2361, 2363, 2368, 2369, 2371, 2372, 2497, 2498, 2619, 2641, 2642, 2649, 2650, 2651, 2652, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
        2696, 2698, 2711, 2712, 2713, 2716, 2717, 2718, 2719, 2728, 2729, 2747, 2749, 2750, 2751, 2752, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
        2773, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2815, 2817, 2818,
        2819, 2845, 2846, 2847, 2849, 2850, 2858, 2868, 2872, 2875, 2879, 2891, 2898, 2902, 2911, 2932, 2933, 2935, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2963, 2965, 2966, 2970, 2971, 2972, 2978,
        2984, 2996, 3019, 3024, 3032, 3033, 3062, 3140, 3325, 3371, 3509, 3510, 3541, 3555, 3578, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3772, 3779, 3899, 3900, 3902, 3919, 4021, 4025,
        4026, 4031, 4033, 4037, 4038, 4041, 4044, 4045, 4048, 4049, 4050, 4051, 4057, 4058, 4059, 4060, 4074, 4091, 4096, 4124, 4187, 4248, 4318, 4322, 4332, 4333, 4444, 4450, 4451, 4457, 4458, 4459, 4460,
        4467, 4468, 4469, 4477, 4493, 4524, 4527, 4529, 4532, 4533, 4539, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4560, 4641, 4642, 4726, 4727, 4744, 4745, 4751, 4754, 4755, 4756, 4757, 4758,
        4759, 4760, 4761, 4762, 4764, 4765, 4766, 4767, 4768, 4770, 4772, 4774, 4775, 4785, 4786, 4787, 4790, 4890, 4891, 4894, 4895, 4896, 4897, 4908, 4909, 4911, 4912, 4913, 4917, 4984, 4988, 4994, 4995,
        4996, 4997, 5005, 5010, 5013, 5015, 5016, 5031, 5035, 5043, 5073, 5104, 5105, 5106, 5132, 5133, 5134, 5135, 5136, 5147, 5148, 5150, 5151, 5152, 5162, 5164, 5165, 5166, 5167, 5168, 5169, 5177, 5178,
        5179, 5180, 5185, 5186, 5192, 5193, 5194, 5203, 5204, 5208, 5209, 5211, 5215, 5227, 5228, 5229, 5267, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5287, 5288, 5289, 5290, 5291, 5293, 5294, 5295, 5296,
        5300, 5371, 5372, 5373, 5376, 5377, 5378, 5379, 5388, 5389, 5390, 5391, 5394, 5395, 5403, 5404, 5405, 5406, 5408, 5412, 5413, 5414, 5415, 5416, 5418, 5419, 5420, 5431, 5438, 5439, 5442, 5446, 5486,
        5491, 5493, 5494, 5496, 5497, 5510, 5511, 5528, 5529, 5536, 5547, 5548, 5549, 5550, 5551, 5558, 5570, 5571, 5587, 5588, 5589, 5600, 5601, 5602, 5701, 5712, 5714, 5777, 5792, 5800, 5803, 5806, 5807,
        5810, 5817, 5823, 5824, 5828, 5830, 5834, 5835, 5836, 5837, 5841, 5842, 5844, 5845, 5846, 5852, 5888, 5894, 5897, 5901, 5902, 5908, 5960, 6015, 6030, 6048, 6053, 6064, 6065, 6141, 6142, 6143, 6144,
        6256, 6275, 6276, 6277, 6278, 6426]
'''
# 6 (* x) - hour accuracy
x = 28 # number of 6-hour timeframes to take as one
count = 0
date = datetime.datetime.strptime(start_date + " 00:00:00", "%Y-%m-%d %H:%M:%S") - datetime.timedelta(0, x * 3 * 3600)
stat_good = 0
stat_bad = 0
done = False
good_timeframes = []
while date != datetime.datetime.strptime(misc_handler.next_date(end_date) + " 00:00:00", "%Y-%m-%d %H:%M:%S") + datetime.timedelta(0, x * 3 * 3600) and not done:
    good_constellation = False
    bad_constellation = False
    good_count = 0
    bad_count = 0
    while misc_handler.utc_to_datetime(stix_flares['peak_UTC'][connected_flares[count]]) >= date and misc_handler.utc_to_datetime(stix_flares['peak_UTC'][connected_flares[count]]) < date + datetime.timedelta(0, x * 6 * 3600) and not done:
        if connected_flares[count] in epd_connected_flares_electrons:
            good_constellation = True
            good_count += 1
        elif not good_constellation:
            bad_constellation = True
            bad_count += 1
        count += 1
        if count >= len(connected_flares):
            done = True
            count -= 1 # so not to get out of bound errors...
        
    if good_constellation:
        stat_good += 1
        good_timeframes.append([date.strftime("%Y-%m-%d %H:%M:%S"), str(good_count / (good_count + bad_count) * 100) + "%", str(good_count) + "/" + str(good_count + bad_count)])
    if bad_constellation:
        stat_bad += 1
    date += datetime.timedelta(0, x * 6 * 3600)
    
print("Accuracy of " + str(x * 6) + "-hour intervals is: " + str(stat_good / (stat_good + stat_bad) * 100) + "%")
print(good_timeframes)
'''
'''
lst = []

count = 0
for i in [epd_connected_flares_electrons]:    
    mag_footpoint_lon = misc_handler.mag_footpoint_lonitude(stix_flares['peak_UTC'][i])
        
    if min(abs(mag_footpoint_lon - stix_flares['hgc_lon'][i]), abs(mag_footpoint_lon - stix_flares['hgc_lon'][i] + 360), abs(mag_footpoint_lon - stix_flares['hgc_lon'][i] - 360)) <= delta:
        count += 1
        lst.append(i)
        
# print("Accuracy of +/-", delta, "degrees:", count / len(epd_connected_flares_electrons) * 100, "%")

print(lst)

con_flares = [44, 56, 58, 59, 62, 63, 64, 65, 67, 70, 71, 72, 73, 320, 332, 437, 571, 602, 636, 717, 720, 721, 736, 790, 807, 909, 920, 943, 1310, 1381, 1390, 1396, 1403, 1408, 1409, 1419, 
1426, 1427, 1437, 1448, 1551, 1610, 1624, 1635, 1637, 1642, 1643, 1644, 1926, 1927, 1928, 1951, 1955, 2137, 2254, 2300, 2333, 2337, 2341, 2346, 2347, 2348, 2350, 2358, 2363, 2364, 2372,
2381, 2486, 2668, 2858, 2879, 2955, 2956, 2971, 3033, 3371, 3509, 3772, 3779, 3899, 4032, 4074, 4248, 4457, 4462, 4524, 4539, 4542, 4545, 4547, 4549, 4550, 4896, 4909, 4910, 4912, 4913,
4988, 4994, 4995, 5010, 5015, 5031, 5036, 5043, 5057, 5177, 5412, 5413, 5415, 5416, 5486, 5491, 5493, 5496, 5510, 5587, 5741, 5946, 5960, 6426]

for i in con_flares:
    print(stix_flares['peak_UTC'][i])
'''